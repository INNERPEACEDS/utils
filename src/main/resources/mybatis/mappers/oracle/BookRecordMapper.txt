1.通过recordDTO获取书籍信息
  /**
   * 通过recordDTO获取书籍信息
   * @param bookRecordDTO
   * @return
   */
  List<BookRecord> getBookRecordByDTO(@Param("bookRecordDTO") BookRecordDTO bookRecordDTO);

  <select id="getBookRecordByDTO" parameterType="com.wgb.utils.entity.oracle.dto.BookRecordDTO" resultMap="BaseResultMap">
    select ID, NAME, REMARKS, CREATE_TIME, UPDATE_TIME FROM BOOKRECORD
    <where>
      <trim prefix="(" prefixOverrides="and" suffix=")">
        <if test="bookRecordDTO.id != null">
          and ID = #{bookRecordDTO.id,jdbcType=VARCHAR}
        </if>
        <if test="bookRecordDTO.name != null">
          and NAME like CONCAT('%',CONCAT(#{bookRecordDTO.name,jdbcType=VARCHAR},'%'))
        </if>
        <if test="bookRecordDTO.remarks != null">
          and REMARKS like CONCAT('%',CONCAT(#{bookRecordDTO.remarks,jdbcType=VARCHAR},'%'))
        </if>
        <if test="bookRecordDTO.updateTime != null">
          and UPDATE_TIME = #{bookRecordDTO.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="bookRecordDTO.createTime != null">
          and CREATE_TIME = #{bookRecordDTO.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="bookRecordDTO.startTime != null">
          and CREATE_TIME &gt;= #{bookRecordDTO.startTime,jdbcType=TIMESTAMP}
        </if>
        <if test="bookRecordDTO.endTime != null">
          and CREATE_TIME &lt;= #{bookRecordDTO.endTime,jdbcType=TIMESTAMP}
        </if>
      </trim>
    </where>
    order by CREATE_TIME DESC
  </select>